// <auto-generated />
using GisProxy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GisProxy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241212161435_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GisProxy.Entities.Endpoint", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Limit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Endpoints");

                    b.HasData(
                        new
                        {
                            Id = "https://portaltest.gismap.by/arcservertest/rest/services/C01_Belarus_WGS84/Belarus_BaseMap_WGS84/MapServer",
                            Limit = 100,
                            Title = "Oбзорная карта"
                        },
                        new
                        {
                            Id = "https://portaltest.gismap.by/arcservertest/rest/services/A06_ATE_TE_WGS84/ATE_Minsk_public/MapServer/1",
                            Limit = 100,
                            Title = "Населенные пункты"
                        },
                        new
                        {
                            Id = "https://portaltest.gismap.by/arcservertest/rest/services/A05_EGRNI_WGS84/Uchastki_Minsk_public/MapServer/0",
                            Limit = 100,
                            Title = "земельные участки"
                        },
                        new
                        {
                            Id = "https://portaltest.gismap.by/arcservertest/rest/services/A01_ZIS_WGS84/Land_Minsk_public/MapServer/0",
                            Limit = 100,
                            Title = "Виды земель"
                        });
                });

            modelBuilder.Entity("GisProxy.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GisProxy.Entities.UserEndpoint", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndpointId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RequestsUsed")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "EndpointId");

                    b.HasIndex("EndpointId");

                    b.ToTable("UserEndpoints");
                });

            modelBuilder.Entity("GisProxy.Entities.UserEndpoint", b =>
                {
                    b.HasOne("GisProxy.Entities.Endpoint", "Endpoint")
                        .WithMany("UserLimits")
                        .HasForeignKey("EndpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GisProxy.Entities.User", "User")
                        .WithMany("UserLimits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GisProxy.Entities.Endpoint", b =>
                {
                    b.Navigation("UserLimits");
                });

            modelBuilder.Entity("GisProxy.Entities.User", b =>
                {
                    b.Navigation("UserLimits");
                });
#pragma warning restore 612, 618
        }
    }
}
